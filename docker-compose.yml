services:
  eldewrito_server_1:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "${GAME_PORT}:${GAME_PORT}/udp"
      - "${PORT}:${PORT}/tcp"
      - "${RCON_PORT}:${RCON_PORT}/tcp"
      - "${SIGNAL_SERVER_PORT}:${SIGNAL_SERVER_PORT}/tcp"
      - "${FILE_SERVER_PORT}:${FILE_SERVER_PORT}"
    volumes:
      - ./eldewrito:/game
      - ./scripts:/scripts
      - ./eldewrito/data:/config
    working_dir: /game
    command: [ "sh", "../scripts/start.sh" ]
    cap_add:
      - SYS_PTRACE
    environment:
      - GAME_PORT=11774
      - PORT=11775
      - RCON_PORT=11776
      - SIGNAL_SERVER_PORT=11777
      - FILE_SERVER_PORT=11778
      - ED_CFG_VERSION=0.7.0
      - INSTANCE_ID=1
      - SERVER_NAME=[Dockerized] HaloOnline Server \#1
      - SERVER_HOST=Docker
      - RCON_PASSWORD=mypassword
      - CHAT_LOG=logs/chat_server_1.log
#      - VOTING_JSON_PATH=data/server/voting_minigames.json

  eldewrito_server_2:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "${GAME_PORT}:${GAME_PORT}/udp"
      - "${PORT}:${PORT}/tcp"
      - "${RCON_PORT}:${RCON_PORT}/tcp"
      - "${SIGNAL_SERVER_PORT}:${SIGNAL_SERVER_PORT}/tcp"
      - "${FILE_SERVER_PORT}:${FILE_SERVER_PORT}"
    volumes:
      - ./eldewrito:/game
      - ./scripts:/scripts
      - ./eldewrito/data:/config
    working_dir: /game
    command: [ "sh", "../scripts/start.sh" ]
    cap_add:
      - SYS_PTRACE
    environment:
      - GAME_PORT=11784 #UPDATE_PER_SERVER!
      - PORT=11785 #UPDATE_PER_SERVER!
      - RCON_PORT=11786 #UPDATE_PER_SERVER!
      - SIGNAL_SERVER_PORT=11787 #UPDATE_PER_SERVER!
      - FILE_SERVER_PORT=11788 #UPDATE_PER_SERVER!
      - ED_CFG_VERSION=0.7.0
      - INSTANCE_ID=2 #UPDATE_PER_SERVER!
      - SERVER_NAME=[Dockerized] HaloOnline Server \#2 #UPDATE_PER_SERVER!
      - SERVER_HOST=Docker
      - RCON_PASSWORD=mypassword
      - CHAT_LOG=logs/chat_server_2.log #UPDATE_PER_SERVER!
#      - VOTING_JSON_PATH=data/server/voting_minigames.json
